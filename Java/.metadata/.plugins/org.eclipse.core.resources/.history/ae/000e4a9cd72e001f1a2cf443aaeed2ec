package JDBC기초;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Scanner;

public class Ex01Insert {

	public static void main(String[] args) {
		
		// 사용자로부터 이름, 나이, 성별, 학과를 입력받아서
		// 입력받은 내용이 데이터베이스에 저장될 수 있도록 만들어 주자
		
		Scanner sc = new Scanner(System.in);
		
		System.out.print("이름 : ");
		String name = sc.next();
		System.out.print("나이 : ");
		int age = sc.nextInt();
		System.out.print("성별 : ");
		String gender = sc.next();
		System.out.print("전공 : ");
		String major = sc.next();
		
		// 입력받은 4개의 데이터를 Student라는 하나의 자료형
		
		Student stu = new Student(name, age, gender, major);
		
		// 1. 동적 로딩 : 실행을 시키면 자료형이 결정되는 것
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
			// 기울임꼴 형태의 코드 : static(정적인 공간을 사용하는)
			
			// Syntax Error (문법에러) 
			// Exception (예외상황)
			
			// 2. 데이터베이스 연결 권한 확인
			// 준비물 : id, pw, url
			String id = "hr";
			String pw = "12345";
			String url = "jdbc:oracle:thin:@localhost:1521:xe"; 
			
			// jdbc:oracle:thin - 오라클 thin 드라이버
			// @localhost - 내 컴퓨터 ip 주소
			// 1521 : 포트 번호
			// xe : oracle DB의 별칭
			
			Connection con = DriverManager.getConnection(url, id, pw);
			// DriverManager import 해주기
			// Connection import
			
			// con - 받아온 연결 권한
			
			// 3. 쿼리문을 준비하자
			String sql = "INSERT INTO STUDENT VALUES(?,?,?,?)";
			// ?(물음표) : 사용자가 입력한 값인데 아직 사용자가 뭘 입력할지 모르기 때문
			
			PreparedStatement psmt = con.prepareStatement(sql);
			// import 작업하기
			// PreparedStatement 객체는 DB로 쿼리문을 가지고 이동하는 객체
			// ? 를 실제 데이터로 채우는 작업
			
			psmt.setString(1, stu.getName());
			psmt.setInt(2, stu.getAge());
			psmt.setString(3, stu.getGender());
			psmt.setString(4, stu.getMajor());
			
			psmt.executeUpdate();
			
			
			
			
			
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
			System.out.println("동적 로딩 실패"); // forName 확인
			
			// OracleDriver
			// 1) ojdbc.jar 파일이 적용이 안 되어있거나
			// 2) "" 경로가 잘못되었거나
			
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("권한 확인 실패");  // getConnection 확인
			
			// 나의 계정 비밀번호, 아이디 오타 확인
			// url의 값이 정확한지 오타 확인
		}
		
		// try ~ catch ~ finally
		// : 예외상황을 처리하는 문법
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

	}

}
