package JDBC기초;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Scanner;

public class Ex02Update {
	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		
		System.out.print("이름 입력 : ");
		String name = sc.next();
		System.out.print("나이 입력 : ");
		int age = sc.nextInt();
		System.out.print("수정할 전공 입력 : ");
		String major = sc.next();
		
		Student stu = new Student(name, age, gender, major);
		
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
			// 기울임꼴 형태의 코드 : static(정적인 공간을 사용하는)
			
			// Syntax Error (문법에러) 
			// Exception (예외상황)
			
			// 2. 데이터베이스 연결 권한 확인
			// 준비물 : id, pw, url
			String id = "hr";
			String pw = "12345";
			String url = "jdbc:oracle:thin:@localhost:1521:xe"; 
			
			// jdbc:oracle:thin - 오라클 thin 드라이버
			// @localhost - 내 컴퓨터 ip 주소
			// 1521 : 포트 번호
			// xe : oracle DB의 별칭
			
			Connection con = DriverManager.getConnection(url, id, pw);
			// DriverManager import 해주기
			// Connection import
			
			// con - 받아온 연결 권한
			
			// 3. 쿼리문을 준비하자
			String sql = "UPDATE STUDENT SET MAJOR = ? WHERE NAME = ? AND AGE = ?";
			// ?(물음표) : 사용자가 입력한 값인데 아직 사용자가 뭘 입력할지 모르기 때문
			
			PreparedStatement psmt = con.prepareStatement(sql);
			// import 작업하기
			// PreparedStatement 객체는 DB로 쿼리문을 가지고 이동하는 객체
			// ? 를 실제 데이터로 채우는 작업
			
			psmt.setString(2, stu.getName());
			psmt.setInt(3, stu.getAge());
			psmt.setString(1, stu.getMajor());
			
			int cnt = psmt.executeUpdate();
			// executeUpdate() : 쿼리문을 DB로 이동시켜서 실행하고,
			// 결과값도 받아오는 기능을 가지고 있다.
			// 결과값은 테이블에 영향을 받은 행이 있는지 없는지에 대해서 int 자료형의 값을 가져온다.
			
			if (cnt > 0) {
				System.out.println("업데이트 성공");
			} else {
				System.out.println("업데이트 실패");
			}
			
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
			System.out.println("동적 로딩 실패"); // forName 확인
			
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("권한 확인 실패");  // getConnection 확인
		}
		
	}
}
